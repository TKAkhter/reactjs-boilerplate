// This file is auto-generated by @hey-api/openapi-ts

export type Health = unknown;

export type Auth = {
  email: string;
  password: string;
};

export type User = {
  id: string;
  name: string;
  email: string;
  password: string;
  resetToken: string;
  createdAt: string;
  updatedAt: string;
  phoneNumber: string;
  bio: string;
};

export type File = {
  id: string;
  createdAt: string;
  updatedAt: string;
  name: string;
  path: string;
  text: string;
  tags: string;
  views: number;
  userId: string;
};

export type GetHealthData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/health";
};

export type GetHealthResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: unknown;
  };
};

export type GetHealthResponse = GetHealthResponses[keyof GetHealthResponses];

export type GetHealthClearCacheData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/health/clear-cache";
};

export type GetHealthClearCacheResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: unknown;
  };
};

export type GetHealthClearCacheResponse =
  GetHealthClearCacheResponses[keyof GetHealthClearCacheResponses];

export type GetHealthClearLogsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/health/clear-logs";
};

export type GetHealthClearLogsResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: unknown;
  };
};

export type GetHealthClearLogsResponse =
  GetHealthClearLogsResponses[keyof GetHealthClearLogsResponses];

export type PostAuthLoginData = {
  body?: {
    email: string;
    password: string;
  };
  path?: never;
  query?: never;
  url: "/auth/login";
};

export type PostAuthLoginResponses = {
  /**
   * Login Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      user: {
        id: string;
        name: string;
        email: string;
        password: string;
        resetToken: string;
        createdAt: string;
        updatedAt: string;
        phoneNumber: string;
        bio: string;
      };
      token: string;
    };
  };
};

export type PostAuthLoginResponse = PostAuthLoginResponses[keyof PostAuthLoginResponses];

export type PostAuthRegisterData = {
  body?: {
    email: string;
    password: string;
    confirmPassword: string;
  };
  path?: never;
  query?: never;
  url: "/auth/register";
};

export type PostAuthRegisterResponses = {
  /**
   * Register Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      user: {
        id: string;
        name: string;
        email: string;
        password: string;
        resetToken: string;
        createdAt: string;
        updatedAt: string;
        phoneNumber: string;
        bio: string;
      };
      token: string;
    };
  };
};

export type PostAuthRegisterResponse = PostAuthRegisterResponses[keyof PostAuthRegisterResponses];

export type PostAuthExtendTokenData = {
  body?: {
    token: string;
  };
  path?: never;
  query?: never;
  url: "/auth/extend-token";
};

export type PostAuthExtendTokenResponses = {
  /**
   * Token Extended Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      token: string;
    };
  };
};

export type PostAuthExtendTokenResponse =
  PostAuthExtendTokenResponses[keyof PostAuthExtendTokenResponses];

export type GetAuthLogoutData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/auth/logout";
};

export type GetAuthLogoutResponses = {
  /**
   * Logout Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      success: boolean;
    };
  };
};

export type GetAuthLogoutResponse = GetAuthLogoutResponses[keyof GetAuthLogoutResponses];

export type PostAuthForgotPasswordData = {
  body?: {
    email: string;
  };
  path?: never;
  query?: never;
  url: "/auth/forgot-password";
};

export type PostAuthForgotPasswordResponses = {
  /**
   * Reset link sent. Check you email
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      email: string;
    };
  };
};

export type PostAuthForgotPasswordResponse =
  PostAuthForgotPasswordResponses[keyof PostAuthForgotPasswordResponses];

export type PostAuthResetPasswordData = {
  body?: {
    resetToken: string;
    password: string;
    confirmPassword: string;
  };
  path?: never;
  query?: never;
  url: "/auth/reset-password";
};

export type PostAuthResetPasswordResponses = {
  /**
   * Password reset successful
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      resetToken: string;
      password: string;
      confirmPassword: string;
    };
  };
};

export type PostAuthResetPasswordResponse =
  PostAuthResetPasswordResponses[keyof PostAuthResetPasswordResponses];

export type GetUserData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/user";
};

export type GetUserResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: Array<{
      id: string;
      name: string;
      email: string;
      password: string;
      resetToken: string;
      createdAt: string;
      updatedAt: string;
      phoneNumber: string;
      bio: string;
    }>;
  };
};

export type GetUserResponse = GetUserResponses[keyof GetUserResponses];

export type PostUserData = {
  body?: {
    name?: string;
    email?: string;
    password?: string;
    resetToken?: string;
    phoneNumber?: string;
    bio?: string;
  };
  path?: never;
  query?: never;
  url: "/user";
};

export type PostUserResponses = {
  /**
   * User Created Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      name?: string;
      email?: string;
      password?: string;
      resetToken?: string;
      phoneNumber?: string;
      bio?: string;
    };
  };
};

export type PostUserResponse = PostUserResponses[keyof PostUserResponses];

export type PostUserImportData = {
  body?: {
    /**
     * The file to upload
     */
    file?: Blob | File;
  };
  path?: never;
  query?: never;
  url: "/user/import";
};

export type PostUserImportResponses = {
  /**
   * Users Imported Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: unknown;
  };
};

export type PostUserImportResponse = PostUserImportResponses[keyof PostUserImportResponses];

export type GetUserExportData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/user/export";
};

export type GetUserExportResponses = {
  /**
   * Users Exported Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: unknown;
  };
};

export type GetUserExportResponse = GetUserExportResponses[keyof GetUserExportResponses];

export type DeleteUserByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: "/user/{id}";
};

export type DeleteUserByIdResponses = {
  /**
   * User Deleted Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: unknown;
  };
};

export type DeleteUserByIdResponse = DeleteUserByIdResponses[keyof DeleteUserByIdResponses];

export type GetUserByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: "/user/{id}";
};

export type GetUserByIdResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      id: string;
      name: string;
      email: string;
      password: string;
      resetToken: string;
      createdAt: string;
      updatedAt: string;
      phoneNumber: string;
      bio: string;
    };
  };
};

export type GetUserByIdResponse = GetUserByIdResponses[keyof GetUserByIdResponses];

export type PutUserByIdData = {
  body?: {
    name?: string;
    email?: string;
    resetToken?: string;
    updatedAt?: string;
    phoneNumber?: string;
    bio?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: "/user/{id}";
};

export type PutUserByIdResponses = {
  /**
   * User Updated Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      name?: string;
      email?: string;
      resetToken?: string;
      updatedAt?: string;
      phoneNumber?: string;
      bio?: string;
    };
  };
};

export type PutUserByIdResponse = PutUserByIdResponses[keyof PutUserByIdResponses];

export type GetUserEmailByEmailData = {
  body?: never;
  path: {
    email: string;
  };
  query?: never;
  url: "/user/email/{email}";
};

export type GetUserEmailByEmailResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      id: string;
      name: string;
      email: string;
      password: string;
      resetToken: string;
      createdAt: string;
      updatedAt: string;
      phoneNumber: string;
      bio: string;
    };
  };
};

export type GetUserEmailByEmailResponse =
  GetUserEmailByEmailResponses[keyof GetUserEmailByEmailResponses];

export type PostUserFindData = {
  body?: {
    filter: {
      [key: string]: unknown;
    };
    paginate?: {
      page?: number;
      perPage?: number;
    };
    orderBy?: Array<{
      sort?: string;
      order: "asc" | "desc";
    }>;
  };
  path?: never;
  query?: never;
  url: "/user/find";
};

export type PostUserFindResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: Array<{
      filter: {
        [key: string]: unknown;
      };
      paginate?: {
        page?: number;
        perPage?: number;
      };
      orderBy?: Array<{
        sort?: string;
        order: "asc" | "desc";
      }>;
    }>;
  };
};

export type PostUserFindResponse = PostUserFindResponses[keyof PostUserFindResponses];

export type DeleteUserBulkData = {
  body?: {
    ids: Array<string>;
  };
  path?: never;
  query?: never;
  url: "/user/bulk";
};

export type DeleteUserBulkResponses = {
  /**
   * Users Deleted Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: unknown;
  };
};

export type DeleteUserBulkResponse = DeleteUserBulkResponses[keyof DeleteUserBulkResponses];

export type GetFileData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/file";
};

export type GetFileResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: Array<{
      id: string;
      createdAt: string;
      updatedAt: string;
      name: string;
      path: string;
      text: string;
      tags: string;
      views: number;
      userId: string;
    }>;
  };
};

export type GetFileResponse = GetFileResponses[keyof GetFileResponses];

export type DeleteFileByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: "/file/{id}";
};

export type DeleteFileByIdResponses = {
  /**
   * File Deleted Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: unknown;
  };
};

export type DeleteFileByIdResponse = DeleteFileByIdResponses[keyof DeleteFileByIdResponses];

export type GetFileByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: "/file/{id}";
};

export type GetFileByIdResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      id: string;
      createdAt: string;
      updatedAt: string;
      name: string;
      path: string;
      text: string;
      tags: string;
      views: number;
      userId: string;
    };
  };
};

export type GetFileByIdResponse = GetFileByIdResponses[keyof GetFileByIdResponses];

export type PutFileByIdData = {
  body?: {
    name?: string;
    tags?: string;
    userId?: string;
    /**
     * The file to upload
     */
    file?: Blob | File;
    views?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: "/file/{id}";
};

export type PutFileByIdResponses = {
  /**
   * File updated Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      name?: string;
      tags?: string;
      userId?: string;
      /**
       * The file to upload
       */
      file?: Blob | File;
      views?: string;
    };
  };
};

export type PutFileByIdResponse = PutFileByIdResponses[keyof PutFileByIdResponses];

export type GetFileUserByUserIdData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: never;
  url: "/file/user/{userId}";
};

export type GetFileUserByUserIdResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      id: string;
      createdAt: string;
      updatedAt: string;
      name: string;
      path: string;
      text: string;
      tags: string;
      views: number;
      userId: string;
    };
  };
};

export type GetFileUserByUserIdResponse =
  GetFileUserByUserIdResponses[keyof GetFileUserByUserIdResponses];

export type PostFileFindData = {
  body?: {
    filter: {
      [key: string]: unknown;
    };
    paginate?: {
      page?: number;
      perPage?: number;
    };
    orderBy?: Array<{
      sort?: string;
      order: "asc" | "desc";
    }>;
  };
  path?: never;
  query?: never;
  url: "/file/find";
};

export type PostFileFindResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: Array<{
      filter: {
        [key: string]: unknown;
      };
      paginate?: {
        page?: number;
        perPage?: number;
      };
      orderBy?: Array<{
        sort?: string;
        order: "asc" | "desc";
      }>;
    }>;
  };
};

export type PostFileFindResponse = PostFileFindResponses[keyof PostFileFindResponses];

export type PostFileUploadData = {
  body?: {
    name?: string;
    tags?: string;
    userId?: string;
    /**
     * The file to upload
     */
    file?: Blob | File;
    views?: string;
  };
  path?: never;
  query?: never;
  url: "/file/upload";
};

export type PostFileUploadResponses = {
  /**
   * File uploaded Successfully
   */
  200: {
    success: boolean;
    statusCode: number;
    message: string;
    data?: {
      name?: string;
      tags?: string;
      userId?: string;
      /**
       * The file to upload
       */
      file?: Blob | File;
      views?: string;
    };
  };
};

export type PostFileUploadResponse = PostFileUploadResponses[keyof PostFileUploadResponses];

export type ClientOptions = {
  baseUrl: "http://localhost:5000/api" | "https://localhost:5000/api" | (string & {});
};
